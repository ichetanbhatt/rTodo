{"version":3,"sources":["components/AddTodo.js","components/layout/Header.js","components/TodoItem.js","components/Todos.js","App.js","index.js"],"names":["AddTodo","Component","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","title","onChange","e","setState","target","value","onSubmit","preventDefault","props","addTodo","inherits","createClass","key","react_default","a","createElement","autoComplete","className","type","name","placeholder","aria-label","style","borderRadius","TodoItem","getStyle","textDecoration","todoItem","completed","fontWeight","todoStyle","position","padding","fontSize","color","borderLeft","buttonStyle","display","top","right","bottom","width","height","margin","marginBottom","transition","_this2","_this$props$todoItem","id","checked","toggleComplete","bind","left","wordBreak","react_hashtag_m","renderHashtag","hashtag","onClick","searchTodos","uuid","deleteTodo","mdbreact_esm","far","icon","Todos","todoItemView","todoArray","map","todo","components_TodoItem","listStyleType","App","context","keywords","flag","console","log","searchKeywords","searching","updatedKeywords","search","jsSearch","indexStrategy","addIndex","addDocuments","searchResult","searchArray","hashtags","match","newTodo","createdAt","Date","completedAt","toConsumableArray","ls","set","selectedTodo","findIndex","sortArray","list","ongoingTodos","filter","completedTodos","sort","b","getTime","resetTodos","clear","renderNavbar","backgroundColor","dark","get","sm","components_AddTodo","components_Todos","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"gQAqCeA,GCjCaC,YDF5B,SAAAC,GAAA,SAAAF,IAAA,IAAAG,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAP,GAAA,QAAAQ,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAAL,IAAAgB,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MACEQ,MAAQ,CACNC,MAAO,IAFXhB,EAKEiB,SAAW,SAAAC,GAAC,OAAIlB,EAAKmB,SAAS,CAAEH,MAAOE,EAAEE,OAAOC,SALlDrB,EAOEsB,SAAW,SAAAJ,GACTA,EAAEK,iBACuB,KAArBvB,EAAKe,MAAMC,QAGbhB,EAAKwB,MAAMC,QAAQzB,EAAKe,MAAMC,OAC9BhB,EAAKmB,SAAS,CAAEH,MAAO,OAb7BhB,EAAA,OAAAC,OAAAyB,EAAA,EAAAzB,CAAAL,EAAAE,GAAAG,OAAA0B,EAAA,EAAA1B,CAAAL,EAAA,EAAAgC,IAAA,SAAAP,MAAA,WAkBI,OACEQ,EAAAC,EAAAC,cAAA,QAAMT,SAAUnB,KAAKmB,SAAUU,aAAa,OAC1CH,EAAAC,EAAAC,cAAA,SACEE,UAAU,oCACVC,KAAK,OACLC,KAAK,QACLC,YAAY,aACZC,aAAW,UACXhB,MAAOlB,KAAKY,MAAMC,MAClBC,SAAUd,KAAKc,SACfqB,MAAO,CAAEC,aAAc,cA5BjC3C,EAAA,CAA6BC,+BEiHd2C,EA7Gf,SAAA1C,GAAA,SAAA0C,IAAA,IAAAzC,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqC,GAAA,QAAApC,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAAuC,IAAA5B,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MACEkC,SAAW,WACT,MAAO,CAELC,eAAgB1C,EAAKwB,MAAMmB,SAASC,UAAY,eAAiB,OACjEC,WAAY7C,EAAKwB,MAAMmB,SAASC,UAAY,MAAQ,QAL1D5C,EASE8C,UAAY,WACV,MAAO,CACLC,SAAU,WACVC,QAAS,sBACTC,SAAU,OAIVC,MAAQlD,EAAKwB,MAAMmB,SAASC,UAAY,UAAW,UACnDF,eAAgB1C,EAAKwB,MAAMmB,SAASC,UAAY,eAAiB,OAEjEO,WAAYnD,EAAKwB,MAAMmB,SAASC,UAC5B,oBACA,sBAtBV5C,EA0BEoD,YAAc,WACZ,MAAO,CACLC,QAAS,OACTN,SAAU,WACVO,IAAK,IACLC,MAAO,OACPC,OAAQ,IACRC,MAAO,OACPC,OAAQ,OACRC,OAAQ,SACRV,SAAU,OACVC,MAAO,UACPU,aAAc,OACdC,WAAY,wBAvClB7D,EAAA,OAAAC,OAAAyB,EAAA,EAAAzB,CAAAuC,EAAA1C,GAAAG,OAAA0B,EAAA,EAAA1B,CAAAuC,EAAA,EAAAZ,IAAA,SAAAP,MAAA,WA2CW,IAAAyC,EAAA3D,KAAA4D,EAC0B5D,KAAKqB,MAAMmB,SAApCqB,EADDD,EACCC,GAAIhD,EADL+C,EACK/C,MAAO4B,EADZmB,EACYnB,UAEnB,OACEf,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WAAWL,IAAKoC,GAC7BnC,EAAAC,EAAAC,cAAA,aAgBAF,EAAAC,EAAAC,cAAA,MAAIO,MAAOnC,KAAK2C,aACdjB,EAAAC,EAAAC,cAAA,SACEkC,QAASrB,EACTV,KAAK,WACLjB,SAAUd,KAAKqB,MAAM0C,eAAeC,KAAKhE,KAAM6D,GAC/C1B,MAAO,CAAES,SAAU,WAAYO,IAAK,OAAQc,KAAM,UAKpDvC,EAAAC,EAAAC,cAAA,QAAMO,MAAO,CAAC+B,UAAU,eACtBxC,EAAAC,EAAAC,cAACuC,EAAA,EAAD,CACEhC,MAAOnC,KAAKsC,SACZ8B,cAAe,SAAAC,GAAO,OACpB3C,EAAAC,EAAAC,cAAA,KAAGO,MAAO,CAACY,MAAM,WAAYuB,QAAS,kBAAMX,EAAKtC,MAAMkD,YAAYF,IAAU5C,IAAK+C,OAC/EH,KAIJxD,IAGLa,EAAAC,EAAAC,cAAA,QACEO,MAAO,CACLS,SAAU,WACVQ,MAAO,IACPD,IAAK,IACLN,QAAS,sBACTE,MAAO,SAETuB,QAAStE,KAAKqB,MAAMoD,WAAWT,KAAKhE,KAAM6D,IAE1CnC,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAASC,KAAG,EAACC,KAAK,qBAhG9BvC,EAAA,CAA8B3C,aC2BfmF,6MA3BbC,aAAe,WACb,OAAOjF,EAAKwB,MAAM0D,UAAUC,IAAI,SAAAC,GAAI,OAClCvD,EAAAC,EAAAC,cAACsD,EAAD,CACEzD,IAAKwD,EAAKpB,GACVrB,SAAUyC,EACVV,YAAc1E,EAAKwB,MAAMkD,YACzBR,eAAgBlE,EAAKwB,MAAM0C,eAC3BU,WAAY5E,EAAKwB,MAAMoD,wFAK3B,OACE/C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIO,MAAO,CAAEqB,OAAQ,MAAOX,QAAS,IAAKsC,cAAe,SACtDnF,KAAK8E,wBAhBIpF,aC+NL0F,cApNb,SAAAA,EAAY/D,EAAOgE,GAAS,IAAAxF,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoF,IAC1BvF,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,KAAAF,OAAAU,EAAA,EAAAV,CAAAsF,GAAA3E,KAAAT,KAAMqB,EAAOgE,KAYfd,YAAc,SAACe,EAAUC,GAGvB,GAFAC,QAAQC,IAAI,QAER5F,EAAKe,MAAM8E,eAAiBJ,IAAa,GAC3CzF,EAAKmB,SAAS,CACZ0E,eAAgB7F,EAAKe,MAAM8E,eAAiBJ,EAC5CK,WAAW,QAER,CACL,IAAIC,EAIFA,EAHGL,EAGe1F,EAAKe,MAAM8E,eAFX7F,EAAKe,MAAM8E,eAAiBJ,EAKhD,IAAIO,EAAS,IAAIC,SAAgB,MACjCD,EAAOE,cAAgB,IAAID,yBAC3BD,EAAOG,SAAS,SAChBH,EAAOI,aAAapG,EAAKe,MAAMmE,WAC/B,IAAImB,EAAeL,EAAOA,OAAOD,GAEjC/F,EAAKmB,SAAS,CACZ0E,eAAgBE,EAChBD,WAAW,EACXQ,YAAaD,MAtCSrG,EA2C5ByB,QAAU,SAAAT,GACR,IAAIuF,EAAWvF,EAAMwF,MAAM,wBAC3Bb,QAAQC,IAAIW,GAEZ,IAAME,EAAU,CACdzC,GAAIW,MACJ3D,MAAOA,EACP4B,WAAW,EACX8D,UAAW,IAAIC,KACfC,YAAa,KACbL,SAAUA,GAAY,IAIxBvG,EAAKmB,SAAS,CAAE+D,UAAS,CAAGuB,GAAH3F,OAAAb,OAAA4G,EAAA,EAAA5G,CAAeD,EAAKe,MAAMmE,aAAc,kBAC/D4B,IAAGC,IAAI,YAAa/G,EAAKe,MAAMmE,cA1DPlF,EA8D5BkE,eAAiB,SAAAF,GACf,IAAIgD,EAAehH,EAAKe,MAAMmE,UAC5BlF,EAAKe,MAAMmE,UAAU+B,UAAU,SAAA7B,GAAI,OAAIA,EAAKpB,KAAOA,KAErDgD,EAAapE,WAAaoE,EAAapE,UAEvC5C,EAAKkH,aApEqBlH,EAuE5BkH,UAAY,SAAAC,GAGV,IAAIC,EAAepH,EAAKe,MAAMmE,UAAUmC,OACtC,SAAAjC,GAAI,OAAuB,IAAnBA,EAAKxC,YAEX0E,EAAiBtH,EAAKe,MAAMmE,UAAUmC,OACxC,SAAAjC,GAAI,OAAuB,IAAnBA,EAAKxC,YAGfwE,EAAaG,KAAK,SAACzF,EAAG0F,GAGpB,OAFA1F,EAAI,IAAI6E,KAAK7E,EAAE4E,WAAWe,YAC1BD,EAAI,IAAIb,KAAKa,EAAEd,WAAWe,YACV,EAAI3F,EAAI0F,EAAI,EAAI,IAGlCF,EAAeC,KAAK,SAACzF,EAAG0F,GAGtB,OAFA1F,EAAI,IAAI6E,KAAK7E,EAAE8E,aAAaa,YAC5BD,EAAI,IAAIb,KAAKa,EAAEZ,aAAaa,YACZ,EAAI3F,EAAI0F,EAAI,EAAI,IAGlCxH,EAAKmB,SACH,CACE+D,UAAS,GAAApE,OAAAb,OAAA4G,EAAA,EAAA5G,CAAMmH,GAANnH,OAAA4G,EAAA,EAAA5G,CAAuBqH,KAElC,WACER,IAAGC,IAAI,YAAa/G,EAAKe,MAAMmE,WAC/BS,QAAQC,IAAI5F,EAAKe,MAAMmE,cAnGDlF,EAwG5B4E,WAAa,SAAAZ,GACXhE,EAAKmB,SACH,CACE+D,UAAUjF,OAAA4G,EAAA,EAAA5G,CAAKD,EAAKe,MAAMmE,UAAUmC,OAAO,SAAAjC,GAAI,OAAIA,EAAKpB,KAAOA,MAEjE,kBAAM8C,IAAGC,IAAI,YAAa/G,EAAKe,MAAMmE,cA7GblF,EAiH5B0H,WAAa,WACX1H,EAAKmB,SACH,CACE+D,UAAW,GACXoB,YAAa,GACbT,eAAgB,GAChBC,WAAW,GAEb,kBAAMgB,IAAGa,WAzHe3H,EA6H5BiB,SAAW,SAAAC,GACTlB,EAAKmB,SAAS,CAAE0E,eAAgB3E,EAAEE,OAAOC,OAAS,WAEhDrB,EAAK0E,YAAY1E,EAAKe,MAAM8E,eAAgB,MAhIpB7F,EA+K5B4H,aAAe,WACb,OACE/F,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAWvC,MAAO,CAAEuF,gBAAiB,WAAaC,MAAI,GACpDjG,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAcT,MAAI,GAChBvC,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,KACEhD,EAAAC,EAAAC,cAAA,QAAME,UAAU,oBACdJ,EAAAC,EAAAC,cAAA,SACEE,UAAU,yCACVC,KAAK,OACLC,KAAK,SACLC,YAAY,SACZC,aAAW,SACXhB,MAAOrB,EAAKe,MAAM8E,eAClB5E,SAAUjB,EAAKiB,WAEjBY,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAASvC,MAAO,CAAEY,MAAO,SAAW6B,KAAK,cAI/ClD,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAActB,OAAK,GACjB1B,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,KACEhD,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CACE3B,MAAM,SACNZ,MAAO,CAAEqB,OAAQ,IAAKX,QAAS,kBAC/ByB,QAASzE,EAAK0H,YAEd7F,EAAAC,EAAAC,cAAA,qBACQF,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAASE,KAAK,gBAtMhC/E,EAAKe,MAAQ,CACXmE,UAAW4B,IAAGiB,IAAI,cAAgB,GAClCzB,YAAa,GACbT,eAAgB,GAChBC,WAAW,GARa9F,wEAqI1B,OACE6B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OAOZ9B,KAAKyH,eAGN/F,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,KACEhD,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,KACEhD,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAQmD,GAAG,MACXnG,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAQmD,GAAG,MACTnG,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAQ5C,UAAU,OAChBJ,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,KACEhD,EAAAC,EAAAC,cAACkG,EAAD,CAASxG,QAAStB,KAAKsB,YAG3BI,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAQ5C,UAAU,OAChBJ,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,KACEhD,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,KACEhD,EAAAC,EAAAC,cAACmG,EAAD,CACEhD,UACE/E,KAAKY,MAAM+E,UACP3F,KAAKY,MAAMuF,YACXnG,KAAKY,MAAMmE,UAEjBhB,eAAgB/D,KAAK+D,eACrBQ,YAAavE,KAAKuE,YAClBE,WAAYzE,KAAKyE,2BArKrB/E,kCCLlBsI,IAASC,OAAOvG,EAAAC,EAAAC,cAACsG,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.b3b30722.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport class AddTodo extends Component {\n  state = {\n    title: \"\"\n  };\n\n  onChange = e => this.setState({ title: e.target.value });\n\n  onSubmit = e => {\n    e.preventDefault();\n    if (this.state.title === \"\") {\n      return;\n    } else {\n      this.props.addTodo(this.state.title);\n      this.setState({ title: \"\" });\n    }\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.onSubmit} autoComplete=\"off\">\n        <input\n          className=\"form-control form-control-md my-2\"\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"Add Todo..\"\n          aria-label=\"addTodo\"\n          value={this.state.title}\n          onChange={this.onChange}\n          style={{ borderRadius: \"5px\" }}\n        />\n      </form>\n    );\n  }\n}\n\nexport default AddTodo;\n","import React, { Component } from \"react\";\nimport { MDBNavbar, MDBNavbarNav, MDBNavItem, MDBIcon, MDBBtn } from \"mdbreact\";\nimport PropTypes from \"prop-types\";\n\nexport class Header extends Component {\n  state = {\n    search: this.props.searchKeywords,\n    // searchKeywords: this.props.searchKeywords\n  };\n\n  // constructor(props){\n  //   super();\n  //   this.state = {\n  //     search: this.props.searchKeywords\n  //   }\n  // }\n\n  onChange = e => {\n    this.setState({ search: e.target.value }, () => {\n      // console.log(this.state.search);\n      this.props.searchTodos(this.state.search);\n    });\n    \n    this.props.searchTodos();\n  };\n  render() {\n    return (\n      <div>\n        <MDBNavbar style={{ backgroundColor: \"#494ca2\" }} dark>\n          <MDBNavbarNav left>\n            <MDBNavItem>\n              <form className=\"form-inline my-0\">\n                <input\n                  className=\"form-control form-control-sm mr-2 w-75\"\n                  type=\"text\"\n                  name=\"search\"\n                  placeholder=\"Search\"\n                  aria-label=\"Search\"\n                  value={this.state.search}\n                  onChange={this.onChange}\n                />\n                <MDBIcon style={{ color: \"white\" }} icon=\"search\" />\n              </form>\n            </MDBNavItem>\n          </MDBNavbarNav>\n          <MDBNavbarNav right>\n            <MDBNavItem>\n              <MDBBtn\n                color=\"danger\"\n                style={{ margin: \"0\", padding: \".375rem .75rem\" }}\n                onClick={this.props.resetTodos}\n              >\n                <span>\n                  Reset <MDBIcon icon=\"trash\" />\n                </span>\n              </MDBBtn>\n            </MDBNavItem>\n          </MDBNavbarNav>\n        </MDBNavbar>\n      </div>\n    );\n  }\n}\n\nHeader.propTypes = {\n  searchKeywords: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport ReactHashtag from \"react-hashtag\";\nimport PropTypes from \"prop-types\";\nimport { MDBIcon } from \"mdbreact\";\nimport uuid from \"uuid/v4\";\n\nexport class TodoItem extends Component {\n  getStyle = () => {\n    return {\n      // borderBottom: \"1px #ccc dotted\",\n      textDecoration: this.props.todoItem.completed ? \"line-through\" : \"none\",\n      fontWeight: this.props.todoItem.completed ? \"200\" : \"500\"\n    };\n  };\n\n  todoStyle = () => {\n    return {\n      position: \"relative\",\n      padding: \"12px 34px 12px 30px\",\n      fontSize: \"15px\",\n      // borderLeft: \"6px solid green\",\n      // borderBottom: \"1px solid #8186d5\",\n      // background: this.props.todoItem.completed ? \"#8186d5\" : \"#c6cbef\",\n      color : this.props.todoItem.completed ? \"#c4c4c4\": \"#4d4d4d\",\n      textDecoration: this.props.todoItem.completed ? \"line-through\" : \"none\",\n      // fontWeight: this.props.todoItem.completed ? \"350\" : \"400\",\n      borderLeft: this.props.todoItem.completed\n        ? \"6px solid #8186d5\"\n        : \"6px solid #c6cbef\"\n    };\n  };\n\n  buttonStyle = () => {\n    return {\n      display: \"none\",\n      position: \"absolute\",\n      top: \"0\",\n      right: \"10px\",\n      bottom: \"0\",\n      width: \"40px\",\n      height: \"40px\",\n      margin: \"auto 0\",\n      fontSize: \"30px\",\n      color: \"#cc9a9a\",\n      marginBottom: \"11px\",\n      transition: \"color 0.2s ease-out\"\n    };\n  };\n\n  render() {\n    const { id, title, completed } = this.props.todoItem;\n\n    return (\n      <div className=\"todoItem\" key={id}>\n        <span\n          // style={{\n  \n          //   position: \"relative\",\n          //   // borderColor: \"black\",\n          //   // borderStyle: \"solid\",\n          //   // borderWidth: \"0 2px 2px 0\",\n          //   // top: \"10px\",\n          //   left: \"16px\",\n          //   // transform: \"rotate(45deg)\",\n          //   // height: \"15px\",\n          //   // width: \"7px\",\n          //   // marginTop: \"20px\"\n          // }}\n        />\n\n        <li style={this.todoStyle()}>\n          <input\n            checked={completed}\n            type=\"checkbox\"\n            onChange={this.props.toggleComplete.bind(this, id)}\n            style={{ position: \"absolute\", top: \"17px\", left: \"10px\" }}\n          />\n          {/* <label style={this.getStyle()}>\n            {this.renderTextWithHashtags(title)}\n          </label> */}\n          <span style={{wordBreak:\"break-word\"}} >\n            <ReactHashtag\n              style={this.getStyle}\n              renderHashtag={hashtag => (\n                <a style={{color:\"#8186d5\"}} onClick={() => this.props.searchTodos(hashtag)} key={uuid()}>\n                  {hashtag}\n                </a>\n              )}\n            >\n              {title}\n            </ReactHashtag>\n          </span>\n          <span\n            style={{\n              position: \"absolute\",\n              right: \"0\",\n              top: \"0\",\n              padding: \"12px 16px 12px 16px\",\n              color: \"black\"\n            }}\n            onClick={this.props.deleteTodo.bind(this, id)}\n          >\n            <MDBIcon far icon=\"trash-alt\" />\n          </span>\n        </li>\n      </div>\n    );\n  }\n}\n\n// PropTypes\nTodoItem.propTypes = {\n  todoItem: PropTypes.object.isRequired\n};\n\nexport default TodoItem;\n","import React, { Component } from \"react\";\nimport TodoItem from \"./TodoItem\";\n// import CompletedItem from \"./CompletedItem\";\nimport PropTypes from \"prop-types\";\n\nclass Todos extends Component {\n  todoItemView = () => {\n    return this.props.todoArray.map(todo => (\n      <TodoItem\n        key={todo.id}\n        todoItem={todo} // Passing TODOS object\n        searchTodos ={this.props.searchTodos}\n        toggleComplete={this.props.toggleComplete} // Mark a Todo Completed\n        deleteTodo={this.props.deleteTodo} // Delete a Todo\n      />\n    ));\n  };\n  render() {\n    return (\n      <div>\n        <ul style={{ margin: \"0px\", padding: \"0\", listStyleType: \"none\" }}>\n          {this.todoItemView()}\n        </ul>\n      </div>\n    );\n  }\n}\n\n// PropTypes\nTodos.propTypes = {\n  todoArray: PropTypes.array.isRequired\n};\n\nexport default Todos;\n","import React, { Component } from \"react\";\n// Third-party libs\nimport ls from \"local-storage\";\nimport uuid from \"uuid/v4\";\nimport * as jsSearch from \"js-search\";\n\n// Md-bootstrap Imports\nimport { MDBContainer, MDBRow, MDBCol, MDBCard } from \"mdbreact\";\nimport { MDBNavbar, MDBNavbarNav, MDBNavItem, MDBIcon, MDBBtn } from \"mdbreact\";\n\nimport Header from \"./components/layout/Header\";\nimport AddTodo from \"./components/AddTodo\";\nimport \"./App.css\";\nimport Todos from \"./components/Todos\";\n\nclass App extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    // Fetch TodoArray from Localstorage, else store []\n    this.state = {\n      todoArray: ls.get(\"todoArray\") || [],\n      searchArray: [],\n      searchKeywords: \"\",\n      searching: false\n    };\n  }\n\n  // Flag 1 for showing all | 0 for search\n  searchTodos = (keywords, flag) => {\n    console.log(\"Test\");\n\n    if (this.state.searchKeywords + keywords === \"\") {\n      this.setState({\n        searchKeywords: this.state.searchKeywords + keywords,\n        searching: false\n      });\n    } else {\n      let updatedKeywords;\n      if (!flag) {\n        updatedKeywords = this.state.searchKeywords + keywords;\n      } else {\n        updatedKeywords = this.state.searchKeywords;\n      }\n\n      var search = new jsSearch.Search(\"id\");\n      search.indexStrategy = new jsSearch.ExactWordIndexStrategy();\n      search.addIndex(\"title\");\n      search.addDocuments(this.state.todoArray);\n      let searchResult = search.search(updatedKeywords);\n\n      this.setState({\n        searchKeywords: updatedKeywords,\n        searching: true,\n        searchArray: searchResult\n      });\n    }\n  };\n\n  addTodo = title => {\n    let hashtags = title.match(/(^|\\s)(#[a-z\\d-]+)/gi);\n    console.log(hashtags);\n\n    const newTodo = {\n      id: uuid(),\n      title: title,\n      completed: false,\n      createdAt: new Date(),\n      completedAt: null,\n      hashtags: hashtags || []\n    };\n\n    // Update State and store to storage\n    this.setState({ todoArray: [newTodo, ...this.state.todoArray] }, () =>\n      ls.set(\"todoArray\", this.state.todoArray)\n    );\n  };\n\n  toggleComplete = id => {\n    let selectedTodo = this.state.todoArray[\n      this.state.todoArray.findIndex(todo => todo.id === id)\n    ];\n    selectedTodo.completed = !selectedTodo.completed;\n\n    this.sortArray();\n  };\n\n  sortArray = list => {\n    // find todo that are ongoing\n\n    let ongoingTodos = this.state.todoArray.filter(\n      todo => todo.completed === false\n    );\n    let completedTodos = this.state.todoArray.filter(\n      todo => todo.completed === true\n    );\n    // Sort ongoing according to createdaAt\n    ongoingTodos.sort((a, b) => {\n      a = new Date(a.createdAt).getTime();\n      b = new Date(b.createdAt).getTime();\n      return a > b ? -1 : a < b ? 1 : 0;\n    });\n\n    completedTodos.sort((a, b) => {\n      a = new Date(a.completedAt).getTime();\n      b = new Date(b.completedAt).getTime();\n      return a > b ? -1 : a < b ? 1 : 0;\n    });\n\n    this.setState(\n      {\n        todoArray: [...ongoingTodos, ...completedTodos]\n      },\n      () => {\n        ls.set(\"todoArray\", this.state.todoArray);\n        console.log(this.state.todoArray);\n      }\n    );\n  };\n\n  deleteTodo = id => {\n    this.setState(\n      {\n        todoArray: [...this.state.todoArray.filter(todo => todo.id !== id)]\n      },\n      () => ls.set(\"todoArray\", this.state.todoArray)\n    );\n  };\n\n  resetTodos = () => {\n    this.setState(\n      {\n        todoArray: [],\n        searchArray: [],\n        searchKeywords: \"\",\n        searching: false\n      },\n      () => ls.clear()\n    );\n  };\n\n  onChange = e => {\n    this.setState({ searchKeywords: e.target.value }, () => {\n      // console.log(this.state.search);\n      this.searchTodos(this.state.searchKeywords, 1);\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        {/* <Header\n          searchKeywords={this.state.searchKeywords}\n          resetTodos={this.resetTodos}\n          searchTodos={this.searchTodos}\n        /> */}\n\n        {this.renderNavbar()}\n\n        {/* CONTAINER */}\n        <MDBContainer>\n          <MDBRow>\n            <MDBCol sm=\"1\" />\n            <MDBCol sm=\"10\">\n              <MDBRow className=\"m-2\">\n                <MDBCol>\n                  <AddTodo addTodo={this.addTodo} />\n                </MDBCol>\n              </MDBRow>\n              <MDBRow className=\"m-2\">\n                <MDBCol>\n                  <MDBCard>\n                    <Todos\n                      todoArray={\n                        this.state.searching\n                          ? this.state.searchArray\n                          : this.state.todoArray\n                      }\n                      toggleComplete={this.toggleComplete}\n                      searchTodos={this.searchTodos}\n                      deleteTodo={this.deleteTodo}\n                    />\n                  </MDBCard>\n                </MDBCol>\n              </MDBRow>\n            </MDBCol>\n          </MDBRow>\n        </MDBContainer>\n      </div>\n    );\n  }\n  renderNavbar = () => {\n    return (\n      <MDBNavbar style={{ backgroundColor: \"#494ca2\" }} dark>\n        <MDBNavbarNav left>\n          <MDBNavItem>\n            <form className=\"form-inline my-0\">\n              <input\n                className=\"form-control form-control-sm mr-2 w-75\"\n                type=\"text\"\n                name=\"search\"\n                placeholder=\"Search\"\n                aria-label=\"Search\"\n                value={this.state.searchKeywords}\n                onChange={this.onChange}\n              />\n              <MDBIcon style={{ color: \"white\" }} icon=\"search\" />\n            </form>\n          </MDBNavItem>\n        </MDBNavbarNav>\n        <MDBNavbarNav right>\n          <MDBNavItem>\n            <MDBBtn\n              color=\"danger\"\n              style={{ margin: \"0\", padding: \".375rem .75rem\" }}\n              onClick={this.resetTodos}\n            >\n              <span>\n                Reset <MDBIcon icon=\"trash\" />\n              </span>\n            </MDBBtn>\n          </MDBNavItem>\n        </MDBNavbarNav>\n      </MDBNavbar>\n    );\n  };\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\n// Md-bootstrap UI imports\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}
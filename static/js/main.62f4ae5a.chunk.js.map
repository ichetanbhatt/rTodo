{"version":3,"sources":["components/AddTodo.js","components/TodoItem.js","components/Todos.js","App.js","index.js"],"names":["AddTodo","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","title","onChange","e","setState","target","value","onSubmit","preventDefault","trim","props","addTodo","inherits","createClass","key","react_default","a","createElement","autoComplete","className","type","name","placeholder","aria-label","style","borderRadius","Component","TodoItem","textStyle","textDecoration","todoItem","completed","fontWeight","checkboxStyle","position","top","left","todoStyle","padding","fontSize","color","borderLeft","deleteBtnStyle","right","editingDone","event","keyCode","editedTitle","replace","editTodo","id","editMode","deleteTodo","searchTags","_changedText","_this2","_this$props$todoItem","viewStyle","editStyle","display","onDoubleClick","enableEditing","bind","checked","toggleComplete","wordBreak","react_hashtag_m","renderHashtag","hashtag","onClick","updateTags","uuid","mdbreact_esm","far","icon","outline","editingChange","onKeyDown","Todos","todoItemView","todoArray","map","todo","components_TodoItem","searchTodos","ulStyle","margin","listStyleType","App","context","keywords","CustomTokenizer","text","split","filter","searchKeywords","searching","search","jsSearch","updatedKeywords","tokenizer","indexStrategy","addIndex","addDocuments","searchResult","searchArray","searchHashtags","join","newTodo","createdAt","Date","completedAt","ongoingTodos","toConsumableArray","ls","set","updateView","status","completedTodos","findIndex","index","selectedTodo","resetTodos","clear","handleTagsChange","flag","updated","renderNavbar","backgroundColor","dark","react_csv","data","filename","size","get","test1","addStyle","tagStyle","sm","components_AddTodo","react_tagsinput_default","inputProps","components_Todos","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.62f4ae5a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport class AddTodo extends Component {\n  state = {\n    title: \"\"\n  };\n\n  onChange = e => this.setState({ title: e.target.value });\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    if (!this.state.title.trim().length) {\n      return;\n    } else {\n      this.props.addTodo(this.state.title);\n      this.setState({ title: \"\" });\n    }\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.onSubmit} autoComplete=\"off\">\n        <input\n          className=\"form-control form-control-md my-2\"\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"Get things done!\"\n          aria-label=\"addTodo\"\n          value={this.state.title}\n          onChange={this.onChange}\n          style={{ borderRadius: \"5px\" }}\n        />\n      </form>\n    );\n  }\n}\n\nexport default AddTodo;\n","import React, { Component } from \"react\";\nimport ReactHashtag from \"react-hashtag\";\nimport PropTypes from \"prop-types\";\nimport { MDBIcon, MDBInput } from \"mdbreact\";\nimport uuid from \"uuid/v4\";\n\nexport class TodoItem extends Component {\n  constructor() {\n    super();\n    this.state = {\n      editMode: false,\n      editedTitle: \"\",\n      searchTags: []\n    };\n  }\n  componentDidMount() {\n    this.setState({ editedTitle: this.props.todoItem.title });\n  }\n\n  textStyle = () => {\n    return {\n      textDecoration: this.props.todoItem.completed ? \"line-through\" : \"none\",\n      fontWeight: this.props.todoItem.completed ? \"200\" : \"500\"\n    };\n  };\n\n  checkboxStyle = () => {\n    return { position: \"absolute\", top: \"15px\", left: \"10px\" };\n  };\n  todoStyle = () => {\n    return {\n      position: \"relative\",\n      padding: \"12px 34px 12px 30px\",\n      fontSize: \"15px\",\n      color: this.props.todoItem.completed ? \"#c4c4c4\" : \"#4d4d4d\",\n      textDecoration: this.props.todoItem.completed ? \"line-through\" : \"none\",\n      borderLeft: this.props.todoItem.completed\n        ? \"6px solid #c6cbef\"\n        : \"6px solid #8186d5\"\n    };\n  };\n  deleteBtnStyle = () => {\n    return {\n      position: \"absolute\",\n      right: \"0\",\n      top: \"0\",\n      padding: \"12px 16px 12px 16px\",\n      color: \"black\"\n    };\n  };\n\n  enableEditing(event) {\n    // console.log(\"enabling editing\");\n    this.setState({\n      editMode: true,\n      editedTitle: this.props.todoItem.title\n    });\n  }\n\n  editingDone = event => {\n    if (event.keyCode === 13) {\n      if (!this.state.editedTitle.replace(/\\s/g, \"\").length) {\n        this.props.deleteTodo(this.props.todoItem.id);\n      } else {\n        this.props.editTodo(\n          this.props.todoItem.id,\n          this.state.editedTitle,\n          this.props.todoItem.completed\n        );\n        this.setState({\n          editMode: false\n          // editedTitle: this.props.todoItem.title\n        });\n      }\n    } else if (event.keyCode === 27) {\n      this.setState({\n        editMode: false,\n        editedTitle: this.props.todoItem.title\n      });\n    }\n  };\n\n  editingChange(event) {\n    var _changedText = event.target.value;\n    this.setState({\n      editedTitle: _changedText\n    });\n\n    // console.log(this.state.editedTitle);\n  }\n\n  render() {\n    const { id, title, completed } = this.props.todoItem;\n\n    var viewStyle = {};\n    var editStyle = {};\n\n    if (this.state.editMode) {\n      viewStyle.display = \"none\";\n      // this.textStyle.textDecoration = \"none\"\n    } else {\n      editStyle.display = \"none\";\n    }\n\n    return (\n      <div className=\"todoItem\" key={id}>\n        {/* View Mode */}\n\n        <div style={viewStyle} onDoubleClick={this.enableEditing.bind(this)}>\n          <li style={this.todoStyle()}>\n            <input\n              checked={completed}\n              type=\"checkbox\"\n              onChange={this.props.toggleComplete.bind(this, id, completed)}\n              style={this.checkboxStyle()}\n            />\n\n            <span style={{ wordBreak: \"break-word\" }}>\n              <ReactHashtag\n                style={this.textStyle()}\n                renderHashtag={hashtag => (\n                  <a\n                    style={{ color: \"#8186d5\" }}\n                    value={hashtag}\n                    // onClick={() => this.props.searchTodos(hashtag + \" \")}\n                    onClick={this.props.updateTags.bind(this, 1, hashtag)}\n                    key={uuid()}\n                  >\n                    {hashtag}\n                  </a>\n                )}\n              >\n                {this.state.editedTitle}\n              </ReactHashtag>\n            </span>\n            <span\n              style={this.deleteBtnStyle()}\n              onClick={this.props.deleteTodo.bind(this, id, completed)}\n            >\n              <MDBIcon far icon=\"trash-alt\" />\n            </span>\n          </li>\n        </div>\n\n        {/* Editing Mode */}\n        <div style={editStyle}>\n          <li\n            style={{\n              position: \"relative\",\n              padding: \"12px 34px 12px 30px\",\n              fontSize: \"15px\",\n              borderLeft: this.props.todoItem.completed\n                ? \"6px solid #c6cbef\"\n                : \"6px solid #8186d5\"\n            }}\n          >\n            <span>\n              <MDBInput\n                outline\n                type=\"textarea\"\n                value={this.state.editedTitle}\n                onChange={this.editingChange.bind(this)}\n                onKeyDown={this.editingDone.bind(this)}\n              />\n            </span>\n          </li>\n        </div>\n      </div>\n    );\n  }\n}\n\n// PropTypes\nTodoItem.propTypes = {\n  todoItem: PropTypes.object.isRequired\n};\n\nexport default TodoItem;\n","import React, { Component } from \"react\";\nimport TodoItem from \"./TodoItem\";\n// import CompletedItem from \"./CompletedItem\";\nimport PropTypes from \"prop-types\";\n\nclass Todos extends Component {\n  \n  todoItemView = () => {\n    return this.props.todoArray.map(todo => (\n      <TodoItem\n        key={todo.id}\n        todoItem={todo} // Passing TODOS object\n        searchTodos={this.props.searchTodos} //Search Todos\n        toggleComplete={this.props.toggleComplete} // Toggle a Todo Completed/Ongoing\n        editTodo = {this.props.editTodo} // Edit Todo Items\n        deleteTodo={this.props.deleteTodo} // Delete a Todo\n        updateTags = {this.props.updateTags}\n      />\n    ));\n  };\n\n  ulStyle = () => {\n    return {\n      margin: \"0\",\n      padding: \"0\",\n      listStyleType: \"none\"\n    };\n  };\n\n  render() {\n    return (\n      <div>\n        <ul style={this.ulStyle()}>{this.todoItemView()}</ul>\n      </div>\n    );\n  }\n}\n\n// PropTypes\nTodos.propTypes = {\n  todoArray: PropTypes.array.isRequired\n};\n\nexport default Todos;\n","import React, { Component } from \"react\";\n// Third-party libs\nimport ls from \"local-storage\";\nimport uuid from \"uuid/v4\";\nimport * as jsSearch from \"js-search\";\nimport TagsInput from \"react-tagsinput\";\nimport { CSVLink, CSVDownload } from \"react-csv\";\n\n// import \"react-tagsinput/react-tagsinput.css\";\n\n// Md-bootstrap Imports\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBCard,\n  MDBNavbarBrand\n} from \"mdbreact\";\nimport { MDBNavbar, MDBNavbarNav, MDBNavItem, MDBIcon, MDBBtn } from \"mdbreact\";\n\n// import Header from \"./components/layout/Header\";\nimport AddTodo from \"./components/AddTodo\";\nimport \"./App.css\";\nimport Todos from \"./components/Todos\";\nimport { SimpleTokenizer } from \"js-search/dist/commonjs/Tokenizer/SimpleTokenizer\";\n\nclass App extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    // Fetch TodoArray from Localstorage, else store []\n    this.state = {\n      todoArray: ls.get(\"todoArray\") || [],\n      ongoingTodos: ls.get(\"ongoingTodos\") || [],\n      completedTodos: ls.get(\"completedTodos\") || [],\n      searchArray: [],\n      // searchKeywords: \"\", //For keyword searching Navbar\n      searchTags: [], //For tag searching\n      searching: false\n    };\n  }\n\n  searchTodos = keywords => {\n    // console.log(keywords);\n    class CustomTokenizer {\n      tokenize(text) {\n        return text.split(/[\\s]+/i).filter(text => text);\n      }\n    }\n\n    if (this.state.searchKeywords + keywords === \"\") {\n      this.setState({\n        searchKeywords: \"\",\n        searching: false\n      });\n    } else {\n      // Define search settings\n      var search = new jsSearch.Search(\"id\");\n      let updatedKeywords = this.state.searchKeywords;\n      search.tokenizer = new CustomTokenizer();\n      search.indexStrategy = new jsSearch.PrefixIndexStrategy();\n      search.addIndex(\"title\");\n      search.addDocuments(this.state.todoArray);\n\n      let searchResult = search.search(updatedKeywords);\n\n      this.setState({\n        searchKeywords: updatedKeywords,\n        searching: true,\n        searchArray: searchResult\n      });\n    }\n  };\n\n  searchHashtags = () => {\n    let keywords = this.state.searchTags.join(\" \");\n\n    if (keywords === \"\") {\n      this.setState({\n        // searchKeywords: \"\",\n        searching: false\n      });\n    } else {\n      // console.log(keywords);\n      class CustomTokenizer {\n        tokenize(text) {\n          return text.split(/[\\s]+/i).filter(text => text);\n        }\n      }\n\n      var search = new jsSearch.Search(\"id\");\n      // let updatedKeywords = this.state.searchKeywords;\n      search.tokenizer = new CustomTokenizer();\n      search.indexStrategy = new jsSearch.ExactWordIndexStrategy();\n      search.addIndex(\"title\");\n      search.addDocuments(this.state.todoArray);\n\n      let searchResult = search.search(keywords);\n\n      this.setState({\n        // searchKeywords: updatedKeywords,\n        searching: true,\n        searchArray: searchResult\n      });\n    }\n  };\n\n  addTodo = title => {\n    // Regex for matching #hashtags. (#hashtag#test is considered as 1 tag)\n    // let hashtags = title.match(/(^|\\s)(#[a-z\\d-#]+)/gi);\n    // console.log(hashtags);\n\n    const newTodo = {\n      id: uuid(),\n      title: title,\n      completed: false,\n      createdAt: new Date(),\n      completedAt: null\n      // hashtags: hashtags || []\n    };\n\n    // Update State and store to storage\n    this.setState(\n      { ongoingTodos: [newTodo, ...this.state.ongoingTodos] },\n      () => {\n        ls.set(\"ongoingTodos\", this.state.ongoingTodos);\n        this.updateView();\n      }\n    );\n  };\n\n  editTodo = (id, title, status) => {\n    // console.log(id, title, status);\n    if (!status) {\n      let selectedTodo = this.state.ongoingTodos[\n        this.state.ongoingTodos.findIndex(todo => todo.id === id)\n      ];\n\n      selectedTodo.title = title;\n      ls.set(\"ongoingTodos\", this.state.ongoingTodos);\n      this.updateView();\n    } else {\n      let selectedTodo = this.state.completedTodos[\n        this.state.completedTodos.findIndex(todo => todo.id === id)\n      ];\n      selectedTodo.title = title;\n\n      ls.set(\"completedTodos\", this.state.completedTodos);\n      this.updateView();\n    }\n  };\n\n  toggleComplete = (id, status) => {\n    if (status) {\n      let index = this.state.completedTodos.findIndex(todo => todo.id === id);\n\n      let selectedTodo = this.state.completedTodos[index];\n      selectedTodo.completed = false;\n\n      this.setState(\n        {\n          ongoingTodos: [selectedTodo, ...this.state.ongoingTodos],\n          completedTodos: [\n            ...this.state.completedTodos.filter(\n              todo => todo.id !== selectedTodo.id\n            )\n          ]\n        },\n        () => {\n          ls.set(\"ongoingTodos\", this.state.ongoingTodos);\n          ls.set(\"completedTodos\", this.state.completedTodos);\n          this.updateView();\n        }\n      );\n    } else {\n      let index = this.state.ongoingTodos.findIndex(todo => todo.id === id);\n\n      let selectedTodo = this.state.ongoingTodos[index];\n      // console.log(selectedTodo);\n      selectedTodo.completed = true;\n\n      this.setState(\n        {\n          ongoingTodos: [\n            ...this.state.ongoingTodos.filter(\n              todo => todo.id !== selectedTodo.id\n            )\n          ],\n          completedTodos: [selectedTodo, ...this.state.completedTodos]\n        },\n        () => {\n          ls.set(\"ongoingTodos\", this.state.ongoingTodos);\n          ls.set(\"completedTodos\", this.state.completedTodos);\n          this.updateView();\n        }\n      );\n    }\n  };\n\n  updateView() {\n    //\n    let test1 = [...this.state.ongoingTodos, ...this.state.completedTodos];\n\n    // UPDATE STATE AND STORAGE\n    this.setState(\n      {\n        todoArray: test1\n      },\n      () => {\n        ls.set(\"todoArray\", this.state.todoArray);\n        if (this.state.searching) {\n          this.searchHashtags();\n        }\n      }\n    );\n  }\n\n  deleteTodo = (id, status) => {\n    // console.log(id);\n\n    if (status) {\n      this.setState(\n        {\n          completedTodos: [\n            ...this.state.completedTodos.filter(todo => todo.id !== id)\n          ]\n        },\n        () => {\n          ls.set(\"completedTodos\", this.state.completedTodos);\n          this.updateView();\n        }\n      );\n    } else {\n      this.setState(\n        {\n          ongoingTodos: [\n            ...this.state.ongoingTodos.filter(todo => todo.id !== id)\n          ]\n        },\n        () => {\n          ls.set(\"ongoingTodos\", this.state.ongoingTodos);\n          this.updateView();\n        }\n      );\n    }\n  };\n\n  resetTodos = () => {\n    this.setState(\n      {\n        todoArray: [],\n        ongoingTodos: [],\n        completedTodos: [],\n        searchArray: [],\n        searchTags: [],\n        searchKeywords: \"\",\n        searching: false\n      },\n      () => {\n        ls.clear();\n        // window.location.reload();\n      }\n    );\n  };\n\n  onChange = e => {\n    this.setState({ searchKeywords: e.target.value }, () => {\n      this.searchTodos(this.state.searchKeywords, 1);\n    });\n  };\n\n  handleTagsChange = (flag, searchTags) => {\n    // console.log(\"incoming tags\", searchTags);\n    if (flag) {\n      let updated = [...this.state.searchTags, searchTags];\n      this.setState({ searchTags: updated }, () => {\n        // console.log(\"state\", this.state.searchTags);\n        this.searchHashtags();\n      });\n    } else {\n      this.setState({ searchTags }, () => {\n        // console.log(\"state\", this.state.searchTags);\n        this.searchHashtags();\n      });\n    }\n  };\n\n  render() {\n    var addStyle = {};\n    var tagStyle = {};\n\n    if (this.state.searching) {\n      addStyle.display = \"none\";\n    } else {\n      tagStyle.display = \"none\";\n    }\n\n    return (\n      <div className=\"App\">\n        {this.renderNavbar()}\n\n        {/* CONTAINER */}\n        <MDBContainer>\n          <MDBRow>\n            <MDBCol sm=\"1\" />\n            <MDBCol sm=\"10\">\n              <MDBRow className=\"m-2\">\n                <MDBCol>\n                  {/* ADD TODO MODE */}\n                  <div style={addStyle}>\n                    <AddTodo addTodo={this.addTodo} />\n                  </div>\n                  {/* TAG SEARCH MODE */}\n                  <div style={tagStyle}>\n                    <TagsInput\n                      value={this.state.searchTags}\n                      onChange={this.handleTagsChange.bind(this, 0)}\n                      inputProps={{\n                        placeholder: \"Search tags\"\n                      }}\n                    />\n                  </div>\n                </MDBCol>\n              </MDBRow>\n              <MDBRow className=\"m-2\">\n                <MDBCol>\n                  <MDBCard>\n                    <Todos\n                      todoArray={\n                        this.state.searching\n                          ? this.state.searchArray\n                          : this.state.todoArray\n                      }\n                      updateTags={this.handleTagsChange}\n                      editTodo={this.editTodo}\n                      toggleComplete={this.toggleComplete}\n                      searchTodos={this.searchTodos}\n                      deleteTodo={this.deleteTodo}\n                    />\n                  </MDBCard>\n                </MDBCol>\n              </MDBRow>\n            </MDBCol>\n          </MDBRow>\n        </MDBContainer>\n      </div>\n    );\n  }\n  renderNavbar = () => {\n    return (\n      <MDBNavbar style={{ backgroundColor: \"#494ca2\" }} dark>\n        <MDBNavbarBrand>\n          <span className=\"white-text\">\n            <MDBIcon icon=\"check-circle\" />\n            &nbsp;rTodo\n          </span>\n        </MDBNavbarBrand>\n        <MDBNavbarNav right>\n          <MDBNavItem>\n            <CSVLink\n              style={{\n                position: \"relative\",\n                top: \"6px\",\n                margin: \"20px\",\n                color: \"white\"\n              }}\n              data={this.state.todoArray}\n              filename={\"rTodo.csv\"}\n            >\n              <MDBIcon size=\"2x\" icon=\"cloud-download-alt\" />\n            </CSVLink>\n            <MDBBtn\n              color=\"danger\"\n              style={{ margin: \"0\", padding: \".375rem .75rem\" }}\n              onClick={this.resetTodos}\n            >\n              <span>\n                Reset <MDBIcon icon=\"trash\" />\n              </span>\n            </MDBBtn>\n          </MDBNavItem>\n        </MDBNavbarNav>\n      </MDBNavbar>\n    );\n  };\n\n  // Flag 1 for showing all | 0 for search\n  // searchTodos = (keywords, flag) => {\n  //   class CustomTokenizer {\n  //     tokenize(text) {\n  //       return text.split(/[\\s]+/i).filter(text => text);\n  //     }\n  //   }\n\n  //   if (this.state.searchKeywords + keywords === \"\") {\n  //     this.setState({\n  //       searchKeywords: \"\",\n  //       searching: false\n  //     });\n  //   } else {\n  //     // Define search settings\n  //     var search = new jsSearch.Search(\"id\");\n  //     let updatedKeywords;\n  //     if (!flag) {\n  //       //Call from Hashtag clicks\n  //       updatedKeywords = this.state.searchKeywords + keywords;\n  //       search.indexStrategy = new jsSearch.ExactWordIndexStrategy();\n  //       search.tokenizer = new CustomTokenizer();\n  //     } else {\n  //       //Call from keyword search\n  //       updatedKeywords = this.state.searchKeywords;\n  //       search.tokenizer = new CustomTokenizer();\n  //       search.indexStrategy = new jsSearch.PrefixIndexStrategy();\n  //     }\n\n  //     search.addIndex(\"title\");\n  //     search.addDocuments(this.state.todoArray);\n\n  //     let searchResult = search.search(updatedKeywords);\n\n  //     this.setState({\n  //       searchKeywords: updatedKeywords,\n  //       searching: true,\n  //       searchArray: searchResult\n  //     });\n  //   }\n  // };\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\n// Md-bootstrap UI imports\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}